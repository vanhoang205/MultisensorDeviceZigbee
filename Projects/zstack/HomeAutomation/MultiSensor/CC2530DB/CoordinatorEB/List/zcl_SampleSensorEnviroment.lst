###############################################################################
#
# IAR C/C++ Compiler V10.20.1.5333 for 8051               06/Jun/2020  14:24:58
# Copyright 2004-2018 IAR Systems AB.
# PC-locked license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        C:\Users\TS-577\Desktop\Zigbee workspace\Product Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\Source\zcl_SampleSensorEnviroment.c
#    Command line       =  
#        -f C:\Users\TS-577\AppData\Local\Temp\EW5F80.tmp
#        ("C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\Source\zcl_SampleSensorEnviroment.c"
#        -D BDB_REPORTING -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D
#        NV_RESTORE -D xZTOOL_P1 -D xMT_TASK -D xMT_APP_FUNC -D xMT_SYS_FUNC -D
#        xMT_ZDO_FUNC -D xMT_APP_CNF_FUNC -D LCD_SUPPORTED=DEBUG -D
#        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_DISCOVER -D ZCL_WRITE -D
#        ZCL_BASIC -D ZCL_IDENTIFY -D ZCL_TEMPERATURE_MEASUREMENT -D ZCL_GROUPS
#        -lC "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\CoordinatorEB\List"
#        -lA "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\CoordinatorEB\List"
#        --diag_suppress Pe001,Pa010 -o "C:\Users\TS-577\Desktop\Zigbee
#        workspace\Product Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\CoordinatorEB\Obj"
#        -e --debug --core=plain --dptr=16,1 --data_model=large
#        --code_model=banked --calling_convention=xdata_reentrant
#        --place_constants=data_rom --nr_virtual_regs 16 -f
#        "C:\Users\TS-577\Desktop\Zigbee workspace\Product Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg"
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DZDO_COORDINATOR -DRTR_NWK) -f "C:\Users\TS-577\Desktop\Zigbee
#        workspace\Product Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg"
#        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0} -DMAC_MAX_FRAME_SIZE=116
#        -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const __code"
#        -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000
#        -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100 -DREJOIN_POLL_RATE=440
#        -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000) -f
#        "C:\Users\TS-577\Desktop\Zigbee workspace\Product Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\Source\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\Source\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\ZMain\TI2530DB\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\hal\include\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\mac\include\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\mac\high_level\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\mt\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\osal\include\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\services\saddr\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\services\sdata\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\stack\af\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\stack\bdb\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\stack\gp\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\stack\nwk\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\stack\sapi\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\stack\sec\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\stack\sys\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\stack\zcl\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\stack\zdo\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\zmac\"
#        -I "C:\Users\TS-577\Desktop\Zigbee workspace\Product
#        Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\..\..\..\..\..\Components\zmac\f8w\"
#        -Ohz --require_prototypes)
#    Locale             =  Japanese_JPN.932
#    List file          =  
#        C:\Users\TS-577\Desktop\Zigbee workspace\Product Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\CoordinatorEB\List\zcl_SampleSensorEnviroment.lst
#    Object file        =  
#        C:\Users\TS-577\Desktop\Zigbee workspace\Product Developer\particular
#        product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\CC2530DB\CoordinatorEB\Obj\zcl_SampleSensorEnviroment.r51
#
###############################################################################

C:\Users\TS-577\Desktop\Zigbee workspace\Product Developer\particular product\Projects\zstack\HomeAutomation\SampleSensorEnviroment_2\Source\zcl_SampleSensorEnviroment.c
      1          /**************************************************************************************************
      2            Filename:       zcl_sampletemperaturesensor.c
      3            Revised:        $Date: 2014-10-24 16:04:46 -0700 (Fri, 24 Oct 2014) $
      4            Revision:       $Revision: 40796 $
      5          
      6            Description:    Zigbee Cluster Library - sample device application.
      7          
      8          
      9            Copyright 2013 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          /*********************************************************************
     41            This application implements a ZigBee Temperature Sensor, based on Z-Stack 3.0.
     42          
     43            This application is based on the common sample-application user interface. Please see the main
     44            comment in zcl_sampleapp_ui.c. The rest of this comment describes only the content specific for
     45            this sample applicetion.
     46            
     47            Application-specific UI peripherals being used:
     48          
     49            - LEDs:
     50              LED1 is not used in this application
     51          
     52            Application-specific menu system:
     53          
     54              <SET LOCAL TEMP> Set the temperature of the local temperature sensor
     55                Up/Down changes the temperature 
     56                This screen shows the following information:
     57                  Line2:
     58                    Shows the temperature of the local temperature sensor
     59          
     60          *********************************************************************/
     61          
     62          /*********************************************************************
     63           * INCLUDES
     64           */
     65          #include "ZComDef.h"
     66          #include "OSAL.h"
     67          #include "AF.h"
     68          #include "ZDApp.h"
     69          #include "ZDObject.h"
     70          #include "ZDProfile.h"
     71          
     72          #include "zcl.h"
     73          #include "zcl_general.h"
     74          #include "zcl_ha.h"
     75          #include "zcl_ms.h"
     76          
     77          #include "zcl_SampleSensorEnviroment.h"
     78          
     79          #include "onboard.h"
     80          
     81          /* HAL */
     82          #include "hal_led.h"
     83          #include "hal_key.h"
     84          
     85          #include "bdb_interface.h"
     86          #include "bdb_Reporting.h"
     87             
     88          /*********************************************************************
     89           * MACROS
     90           */
     91          
     92          // how often to report temperature
     93          #define SAMPLESENSORENVIROMENT_REPORT_INTERVAL   10000
     94          
     95          /*********************************************************************
     96           * CONSTANTS
     97           */
     98          
     99          /*********************************************************************
    100           * TYPEDEFS
    101           */
    102          
    103          /*********************************************************************
    104           * GLOBAL VARIABLES
    105           */

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    106          byte zclSampleSensorEnviroment_TaskID;
   \                     zclSampleSensorEnviroment_TaskID:
   \   000000                DS 1
   \   000001                REQUIRE __INIT_XDATA_Z
    107          extern int16 zdpExternalStateTaskID;
    108          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    109          afAddrType_t zclSampleSensorEnviroment_dstAddr_light;
   \                     zclSampleSensorEnviroment_dstAddr_light:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    110          afAddrType_t zclSampleSensorEnviroment_dstAddr_temperature;
   \                     zclSampleSensorEnviroment_dstAddr_temperature:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    111          afAddrType_t zclSampleSensorEnviroment_dstAddr_hummidity;
   \                     zclSampleSensorEnviroment_dstAddr_hummidity:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z

   \                                 In  segment XDATA_Z, align 1, keep-with-next
    112          afAddrType_t zclSampleSensorEnviroment_dstAddr_pir;
   \                     zclSampleSensorEnviroment_dstAddr_pir:
   \   000000                DS 12
   \   00000C                REQUIRE __INIT_XDATA_Z
    113          
    114          /*********************************************************************
    115           * GLOBAL FUNCTIONS
    116           */
    117          
    118          /*********************************************************************
    119           * LOCAL VARIABLES
    120           */
    121          

   \                                 In  segment XDATA_I, align 1, keep-with-next
    122          devStates_t zclSampleSensorEnviroment_NwkState = DEV_INIT;
   \                     zclSampleSensorEnviroment_NwkState:
   \   000000                DS 1
   \   000001                REQUIRE `?<Initializer for zclSampleSensorEnviroment_Nw`
   \   000001                REQUIRE __INIT_XDATA_I
    123          
    124          //static uint8 aProcessCmd[] = { 1, 0, 0, 0 }; // used for reset command, { length + cmd0 + cmd1 + data }
    125          
    126          // Test Endpoint to allow SYS_APP_MSGs
    127          

   \                                 In  segment XDATA_I, align 1, keep-with-next
    128          static endPointDesc_t sampleTemperatureSensor_EpList[] =
   \                     sampleTemperatureSensor_EpList:
   \   000000                DS 28
   \   00001C                REQUIRE `?<Initializer for sampleTemperatureSensor_EpLi`
   \   00001C                REQUIRE __INIT_XDATA_I
    129          {
    130            {
    131              SAMPLESENSORENVIROMENT_ENDPOINT_LIGHT,              // Light sensor endpoint
    132              0,
    133              &zclSampleSensorEnviroment_TaskID,
    134              (SimpleDescriptionFormat_t *)NULL,                  // No Simple description for this test endpoint
    135              (afNetworkLatencyReq_t)0                            // No Network Latency req
    136            },
    137            
    138            {
    139              SAMPLESENSORENVIROMENT_ENDPOINT_TEMPERATURE,        // Temperature sensor endpoint
    140              0,
    141              &zclSampleSensorEnviroment_TaskID,
    142              (SimpleDescriptionFormat_t *)NULL,                  // No Simple description for this test endpoint
    143              (afNetworkLatencyReq_t)0                            // No Network Latency req
    144            }, 
    145            
    146            {
    147              SAMPLESENSORENVIROMENT_ENDPOINT_HUMMIDITY,          // Hummidity sensor endpoint
    148              0,
    149              &zclSampleSensorEnviroment_TaskID,
    150              (SimpleDescriptionFormat_t *)NULL,                  // No Simple description for this test endpoint
    151              (afNetworkLatencyReq_t)0                            // No Network Latency req
    152            },
    153            
    154            {
    155              SAMPLESENSORENVIROMENT_ENDPOINT_PIR,                // PIR sensor endpoint
    156              0,
    157              &zclSampleSensorEnviroment_TaskID,
    158              (SimpleDescriptionFormat_t *)NULL,                  // No Simple description for this test endpoint
    159              (afNetworkLatencyReq_t)0                            // No Network Latency req
    160            }
    161          };
    162          
    163          
    164          #ifdef BDB_REPORTING
    165          #if BDBREPORTING_MAX_ANALOG_ATTR_SIZE == 8
    166            uint8 reportableChange[] = {0x2C, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}; // 0x2C01 is 300 in int16
    167          #endif
    168          #if BDBREPORTING_MAX_ANALOG_ATTR_SIZE == 4

   \                                 In  segment XDATA_I, align 1, keep-with-next
    169            uint8 reportableChange[] = {0x2C, 0x01, 0x00, 0x00}; // 0x2C01 is 300 in int16
   \                     reportableChange:
   \   000000                DS 4
   \   000004                REQUIRE `?<Initializer for reportableChange>`
   \   000004                REQUIRE __INIT_XDATA_I
    170          #endif 
    171          #if BDBREPORTING_MAX_ANALOG_ATTR_SIZE == 2
    172            uint8 reportableChange[] = {0x2C, 0x01}; // 0x2C01 is 300 in int16
    173          #endif 
    174          #endif
    175          
    176          /*********************************************************************
    177           * LOCAL FUNCTIONS
    178           */
    179          static void zclSampleSensorEnviroment_HandleKeys( byte shift, byte keys );
    180          static void zclSampleSensorEnviroment_BasicResetCB( void );
    181          
    182          static void zclSampleSensorEnviroment_ProcessCommissioningStatus(bdbCommissioningModeMsg_t* bdbCommissioningModeMsg);
    183          
    184          // Functions to process ZCL Foundation incoming Command/Response messages
    185          static void zclSampleSensorEnviroment_ProcessIncomingMsg( zclIncomingMsg_t *msg );
    186          #ifdef ZCL_READ
    187          static uint8 zclSampleSensorEnviroment_ProcessInReadRspCmd( zclIncomingMsg_t *pInMsg );
    188          #endif
    189          #ifdef ZCL_WRITE
    190          static uint8 zclSampleSensorEnviroment_ProcessInWriteRspCmd( zclIncomingMsg_t *pInMsg );
    191          #endif
    192          static uint8 zclSampleSensorEnviroment_ProcessInDefaultRspCmd( zclIncomingMsg_t *pInMsg );
    193          #ifdef ZCL_DISCOVER
    194          static uint8 zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd( zclIncomingMsg_t *pInMsg );
    195          static uint8 zclSampleSensorEnviroment_ProcessInDiscAttrsRspCmd( zclIncomingMsg_t *pInMsg );
    196          static uint8 zclSampleSensorEnviroment_ProcessInDiscAttrsExtRspCmd( zclIncomingMsg_t *pInMsg );
    197          #endif // ZCL_DISCOVER
    198          
    199          static void zclSampleSensorEnviroment_BatteryWarningCB( uint8 voltLevel);
    200          
    201          /*********************************************************************
    202           * STATUS STRINGS
    203           */
    204          
    205          /*********************************************************************
    206           * CONSTANTS
    207           */
    208          
    209          /*********************************************************************
    210           * ZCL General Profile Callback table
    211           */

   \                                 In  segment XDATA_I, align 1, keep-with-next
    212          static zclGeneral_AppCallbacks_t zclSampleSensorEnviroment_CmdCallbacksList[] =
   \                     zclSampleSensorEnviroment_CmdCallbacksList:
   \   000000                DS 72
   \   000048                REQUIRE `?<Initializer for zclSampleSensorEnviroment_Cm`
   \   000048                REQUIRE __INIT_XDATA_I
    213          {
    214          // *************************************** Callback List of Light Sensor Endpoint ***************************************/
    215            {
    216              zclSampleSensorEnviroment_BasicResetCB,        // Basic Cluster Reset command
    217              NULL,                                           // Identify Trigger Effect command
    218              NULL,             				                      // On/Off cluster command
    219              NULL,                                           // On/Off cluster enhanced command Off with Effect
    220              NULL,                                           // On/Off cluster enhanced command On with Recall Global Scene
    221              NULL,                                           // On/Off cluster enhanced command On with Timed Off
    222            #ifdef ZCL_LEVEL_CTRL
    223              NULL,                                           // Level Control Move to Level command
    224              NULL,                                           // Level Control Move command
    225              NULL,                                           // Level Control Step command
    226              NULL,                                           // Level Control Stop command
    227            #endif
    228            #ifdef ZCL_GROUPS
    229              NULL,                                           // Group Response commands
    230            #endif
    231            #ifdef ZCL_SCENES
    232              NULL,                                           // Scene Store Request command
    233              NULL,                                           // Scene Recall Request command
    234              NULL,                                           // Scene Response command
    235            #endif
    236            #ifdef ZCL_ALARMS
    237              NULL,                                           // Alarm (Response) commands
    238            #endif
    239            #ifdef SE_UK_EXT
    240              NULL,                                           // Get Event Log command
    241              NULL,                                           // Publish Event Log command
    242            #endif
    243              NULL,                                           // RSSI Location command
    244              NULL                                            // RSSI Location Response command
    245            },
    246            
    247          // ********************************* Callback List of Temperature Sensor Endpoint **************************************/
    248            {
    249              zclSampleSensorEnviroment_BasicResetCB,        // Basic Cluster Reset command
    250              NULL,                                           // Identify Trigger Effect command
    251              NULL,             				                      // On/Off cluster command
    252              NULL,                                           // On/Off cluster enhanced command Off with Effect
    253              NULL,                                           // On/Off cluster enhanced command On with Recall Global Scene
    254              NULL,                                           // On/Off cluster enhanced command On with Timed Off
    255            #ifdef ZCL_LEVEL_CTRL
    256              NULL,                                           // Level Control Move to Level command
    257              NULL,                                           // Level Control Move command
    258              NULL,                                           // Level Control Step command
    259              NULL,                                           // Level Control Stop command
    260            #endif
    261            #ifdef ZCL_GROUPS
    262              NULL,                                           // Group Response commands
    263            #endif
    264            #ifdef ZCL_SCENES
    265              NULL,                                           // Scene Store Request command
    266              NULL,                                           // Scene Recall Request command
    267              NULL,                                           // Scene Response command
    268            #endif
    269            #ifdef ZCL_ALARMS
    270              NULL,                                           // Alarm (Response) commands
    271            #endif
    272            #ifdef SE_UK_EXT
    273              NULL,                                           // Get Event Log command
    274              NULL,                                           // Publish Event Log command
    275            #endif
    276              NULL,                                           // RSSI Location command
    277              NULL                                            // RSSI Location Response command
    278            },
    279            
    280          // ******************************** Callback List of Hummidity Sensor Endpoint **************************************/
    281            {
    282              zclSampleSensorEnviroment_BasicResetCB,        // Basic Cluster Reset command
    283              NULL,                                           // Identify Trigger Effect command
    284              NULL,             				                      // On/Off cluster command
    285              NULL,                                           // On/Off cluster enhanced command Off with Effect
    286              NULL,                                           // On/Off cluster enhanced command On with Recall Global Scene
    287              NULL,                                           // On/Off cluster enhanced command On with Timed Off
    288            #ifdef ZCL_LEVEL_CTRL
    289              NULL,                                           // Level Control Move to Level command
    290              NULL,                                           // Level Control Move command
    291              NULL,                                           // Level Control Step command
    292              NULL,                                           // Level Control Stop command
    293            #endif
    294            #ifdef ZCL_GROUPS
    295              NULL,                                           // Group Response commands
    296            #endif
    297            #ifdef ZCL_SCENES
    298              NULL,                                           // Scene Store Request command
    299              NULL,                                           // Scene Recall Request command
    300              NULL,                                           // Scene Response command
    301            #endif
    302            #ifdef ZCL_ALARMS
    303              NULL,                                           // Alarm (Response) commands
    304            #endif
    305            #ifdef SE_UK_EXT
    306              NULL,                                           // Get Event Log command
    307              NULL,                                           // Publish Event Log command
    308            #endif
    309              NULL,                                           // RSSI Location command
    310              NULL                                            // RSSI Location Response command
    311            },
    312            
    313          // ************************************ Callback List of PIR Sensor Endpoint *********************************************/  
    314            {
    315              zclSampleSensorEnviroment_BasicResetCB,        // Basic Cluster Reset command
    316              NULL,                                           // Identify Trigger Effect command
    317              NULL,             				                      // On/Off cluster command
    318              NULL,                                           // On/Off cluster enhanced command Off with Effect
    319              NULL,                                           // On/Off cluster enhanced command On with Recall Global Scene
    320              NULL,                                           // On/Off cluster enhanced command On with Timed Off
    321            #ifdef ZCL_LEVEL_CTRL
    322              NULL,                                           // Level Control Move to Level command
    323              NULL,                                           // Level Control Move command
    324              NULL,                                           // Level Control Step command
    325              NULL,                                           // Level Control Stop command
    326            #endif
    327            #ifdef ZCL_GROUPS
    328              NULL,                                           // Group Response commands
    329            #endif
    330            #ifdef ZCL_SCENES
    331              NULL,                                           // Scene Store Request command
    332              NULL,                                           // Scene Recall Request command
    333              NULL,                                           // Scene Response command
    334            #endif
    335            #ifdef ZCL_ALARMS
    336              NULL,                                           // Alarm (Response) commands
    337            #endif
    338            #ifdef SE_UK_EXT
    339              NULL,                                           // Get Event Log command
    340              NULL,                                           // Publish Event Log command
    341            #endif
    342              NULL,                                           // RSSI Location command
    343              NULL                                            // RSSI Location Response command
    344            }
    345          };
    346          
    347          /*********************************************************************
    348           * @fn          zclSampleSensorEnviroment_Init
    349           *
    350           * @brief       Initialization function for the zclGeneral layer.
    351           *
    352           * @param       none
    353          *
    354          * @return      none
    355          */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    356          void zclSampleSensorEnviroment_Init( byte task_id )
   \                     zclSampleSensorEnviroment_Init:
    357          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV       A,R1
    358            zclSampleSensorEnviroment_TaskID = task_id;
   \   000006   90....       MOV       DPTR,#zclSampleSensorEnviroment_TaskID
   \   000009   F0           MOVX      @DPTR,A
    359            
    360            // Set destination address of Light Sensor to indirect
    361            zclSampleSensorEnviroment_dstAddr_light.addrMode = (afAddrMode_t)AddrNotPresent;
   \   00000A   90....       MOV       DPTR,#zclSampleSensorEnviroment_dstAddr_light + 8
   \   00000D   E4           CLR       A
   \   00000E   F0           MOVX      @DPTR,A
    362            zclSampleSensorEnviroment_dstAddr_light.endPoint = 0;
   \   00000F   A3           INC       DPTR
   \   000010   F0           MOVX      @DPTR,A
    363            zclSampleSensorEnviroment_dstAddr_light.addr.shortAddr = 0;
   \   000011   90....       MOV       DPTR,#zclSampleSensorEnviroment_dstAddr_light
   \   000014   F0           MOVX      @DPTR,A
   \   000015   A3           INC       DPTR
   \   000016   F0           MOVX      @DPTR,A
    364          
    365            // Set destination address of Temperature Sensor to indirect
    366            zclSampleSensorEnviroment_dstAddr_temperature.addrMode = (afAddrMode_t)AddrNotPresent;
   \   000017   90....       MOV       DPTR,#zclSampleSensorEnviroment_dstAddr_temperature + 8
   \   00001A   F0           MOVX      @DPTR,A
    367            zclSampleSensorEnviroment_dstAddr_temperature.endPoint = 0;
   \   00001B   A3           INC       DPTR
   \   00001C   F0           MOVX      @DPTR,A
    368            zclSampleSensorEnviroment_dstAddr_temperature.addr.shortAddr = 0;
   \   00001D   90....       MOV       DPTR,#zclSampleSensorEnviroment_dstAddr_temperature
   \   000020   F0           MOVX      @DPTR,A
   \   000021   A3           INC       DPTR
   \   000022   F0           MOVX      @DPTR,A
    369            
    370            // Set destination address of Humidity Sensor to indirect
    371            zclSampleSensorEnviroment_dstAddr_hummidity.addrMode = (afAddrMode_t)AddrNotPresent;
   \   000023   90....       MOV       DPTR,#zclSampleSensorEnviroment_dstAddr_hummidity + 8
   \   000026   F0           MOVX      @DPTR,A
    372            zclSampleSensorEnviroment_dstAddr_hummidity.endPoint = 0;
   \   000027   A3           INC       DPTR
   \   000028   F0           MOVX      @DPTR,A
    373            zclSampleSensorEnviroment_dstAddr_hummidity.addr.shortAddr = 0;
   \   000029   90....       MOV       DPTR,#zclSampleSensorEnviroment_dstAddr_hummidity
   \   00002C   F0           MOVX      @DPTR,A
   \   00002D   A3           INC       DPTR
   \   00002E   F0           MOVX      @DPTR,A
    374            
    375            // Set destination address of PIR Sensor to indirect
    376            zclSampleSensorEnviroment_dstAddr_pir.addrMode = (afAddrMode_t)AddrNotPresent;
   \   00002F   90....       MOV       DPTR,#zclSampleSensorEnviroment_dstAddr_pir + 8
   \   000032   F0           MOVX      @DPTR,A
    377            zclSampleSensorEnviroment_dstAddr_pir.endPoint = 0;
   \   000033   A3           INC       DPTR
   \   000034   F0           MOVX      @DPTR,A
    378            zclSampleSensorEnviroment_dstAddr_pir.addr.shortAddr = 0;
   \   000035   90....       MOV       DPTR,#zclSampleSensorEnviroment_dstAddr_pir
   \   000038   F0           MOVX      @DPTR,A
   \   000039   A3           INC       DPTR
   \   00003A   F0           MOVX      @DPTR,A
    379            
    380            // Register the Simple Descriptor for this application
    381            bdb_RegisterSimpleDescriptor( &zclSampleSensorEnviroment_SimpleDesc_List[INDEX_LIGHT] );
   \   00003B                ; Setup parameters for call to function bdb_RegisterSimpleDescriptor
   \   00003B   7A..         MOV       R2,#zclSampleSensorEnviroment_SimpleDesc_List & 0xff
   \   00003D   7B..         MOV       R3,#(zclSampleSensorEnviroment_SimpleDesc_List >> 8) & 0xff
   \   00003F   12....       LCALL     `??bdb_RegisterSimpleDescriptor::?relay`; Banked call to: bdb_RegisterSimpleDescriptor
    382            bdb_RegisterSimpleDescriptor( &zclSampleSensorEnviroment_SimpleDesc_List[INDEX_TEMPERATURE] ); 
   \   000042                ; Setup parameters for call to function bdb_RegisterSimpleDescriptor
   \   000042   7A..         MOV       R2,#(zclSampleSensorEnviroment_SimpleDesc_List + 12) & 0xff
   \   000044   7B..         MOV       R3,#((zclSampleSensorEnviroment_SimpleDesc_List + 12) >> 8) & 0xff
   \   000046   12....       LCALL     `??bdb_RegisterSimpleDescriptor::?relay`; Banked call to: bdb_RegisterSimpleDescriptor
    383            bdb_RegisterSimpleDescriptor( &zclSampleSensorEnviroment_SimpleDesc_List[INDEX_HUMMIDITY] ); 
   \   000049                ; Setup parameters for call to function bdb_RegisterSimpleDescriptor
   \   000049   7A..         MOV       R2,#(zclSampleSensorEnviroment_SimpleDesc_List + 24) & 0xff
   \   00004B   7B..         MOV       R3,#((zclSampleSensorEnviroment_SimpleDesc_List + 24) >> 8) & 0xff
   \   00004D   12....       LCALL     `??bdb_RegisterSimpleDescriptor::?relay`; Banked call to: bdb_RegisterSimpleDescriptor
    384            bdb_RegisterSimpleDescriptor( &zclSampleSensorEnviroment_SimpleDesc_List[INDEX_PIR] ); 
   \   000050                ; Setup parameters for call to function bdb_RegisterSimpleDescriptor
   \   000050   7A..         MOV       R2,#(zclSampleSensorEnviroment_SimpleDesc_List + 36) & 0xff
   \   000052   7B..         MOV       R3,#((zclSampleSensorEnviroment_SimpleDesc_List + 36) >> 8) & 0xff
   \   000054   12....       LCALL     `??bdb_RegisterSimpleDescriptor::?relay`; Banked call to: bdb_RegisterSimpleDescriptor
    385          
    386            
    387            // Register the ZCL General Cluster Library callback functions
    388            zclGeneral_RegisterCmdCallbacks( SAMPLESENSORENVIROMENT_ENDPOINT_LIGHT, &zclSampleSensorEnviroment_CmdCallbacksList[INDEX_LIGHT] );
   \   000057                ; Setup parameters for call to function zclGeneral_RegisterCmdCallbacks
   \   000057   7A..         MOV       R2,#zclSampleSensorEnviroment_CmdCallbacksList & 0xff
   \   000059   7B..         MOV       R3,#(zclSampleSensorEnviroment_CmdCallbacksList >> 8) & 0xff
   \   00005B   7908         MOV       R1,#0x8
   \   00005D   12....       LCALL     `??zclGeneral_RegisterCmdCallbacks::?relay`; Banked call to: zclGeneral_RegisterCmdCallbacks
    389            zclGeneral_RegisterCmdCallbacks( SAMPLESENSORENVIROMENT_ENDPOINT_TEMPERATURE, &zclSampleSensorEnviroment_CmdCallbacksList[INDEX_TEMPERATURE] );
   \   000060                ; Setup parameters for call to function zclGeneral_RegisterCmdCallbacks
   \   000060   7A..         MOV       R2,#(zclSampleSensorEnviroment_CmdCallbacksList + 18) & 0xff
   \   000062   7B..         MOV       R3,#((zclSampleSensorEnviroment_CmdCallbacksList + 18) >> 8) & 0xff
   \   000064   7909         MOV       R1,#0x9
   \   000066   12....       LCALL     `??zclGeneral_RegisterCmdCallbacks::?relay`; Banked call to: zclGeneral_RegisterCmdCallbacks
    390            zclGeneral_RegisterCmdCallbacks( SAMPLESENSORENVIROMENT_ENDPOINT_HUMMIDITY, &zclSampleSensorEnviroment_CmdCallbacksList[INDEX_HUMMIDITY] );
   \   000069                ; Setup parameters for call to function zclGeneral_RegisterCmdCallbacks
   \   000069   7A..         MOV       R2,#(zclSampleSensorEnviroment_CmdCallbacksList + 36) & 0xff
   \   00006B   7B..         MOV       R3,#((zclSampleSensorEnviroment_CmdCallbacksList + 36) >> 8) & 0xff
   \   00006D   790A         MOV       R1,#0xa
   \   00006F   12....       LCALL     `??zclGeneral_RegisterCmdCallbacks::?relay`; Banked call to: zclGeneral_RegisterCmdCallbacks
    391            zclGeneral_RegisterCmdCallbacks( SAMPLESENSORENVIROMENT_ENDPOINT_PIR, &zclSampleSensorEnviroment_CmdCallbacksList[INDEX_PIR] );
   \   000072                ; Setup parameters for call to function zclGeneral_RegisterCmdCallbacks
   \   000072   7A..         MOV       R2,#(zclSampleSensorEnviroment_CmdCallbacksList + 54) & 0xff
   \   000074   7B..         MOV       R3,#((zclSampleSensorEnviroment_CmdCallbacksList + 54) >> 8) & 0xff
   \   000076   790B         MOV       R1,#0xb
   \   000078   12....       LCALL     `??zclGeneral_RegisterCmdCallbacks::?relay`; Banked call to: zclGeneral_RegisterCmdCallbacks
    392          
    393            // Register the application's attribute list
    394            zclSampleSensorEnviroment_ResetAttributesToDefaultValues();
   \   00007B                ; Setup parameters for call to function zclSampleSensorEnviroment_ResetAttributesToDefaultValues
   \   00007B   12....       LCALL     ??zclSampleSensorEnviroment_ResetAttributesToDe; Banked call to: zclSampleSensorEnviroment_ResetAttributesToDefaultValues
    395            zcl_registerAttrList( SAMPLESENSORENVIROMENT_ENDPOINT_LIGHT, zclSampleSensorEnviroment_Light_NumAttributes, zclSampleSensorEnviroment_Light_Attrs );   
   \   00007E                ; Setup parameters for call to function zcl_registerAttrList
   \   00007E   7C..         MOV       R4,#zclSampleSensorEnviroment_Light_Attrs & 0xff
   \   000080   7D..         MOV       R5,#(zclSampleSensorEnviroment_Light_Attrs >> 8) & 0xff
   \   000082   90....       MOV       DPTR,#zclSampleSensorEnviroment_Light_NumAttributes
   \   000085   E4           CLR       A
   \   000086   93           MOVC      A,@A+DPTR
   \   000087   FA           MOV       R2,A
   \   000088   7908         MOV       R1,#0x8
   \   00008A   12....       LCALL     `??zcl_registerAttrList::?relay`; Banked call to: zcl_registerAttrList
    396            zcl_registerAttrList( SAMPLESENSORENVIROMENT_ENDPOINT_TEMPERATURE, zclSampleSensorEnviroment_Temperature_NumAttributes, zclSampleSensorEnviroment_Temperature_Attrs );   
   \   00008D                ; Setup parameters for call to function zcl_registerAttrList
   \   00008D   7C..         MOV       R4,#zclSampleSensorEnviroment_Temperature_Attrs & 0xff
   \   00008F   7D..         MOV       R5,#(zclSampleSensorEnviroment_Temperature_Attrs >> 8) & 0xff
   \   000091   90....       MOV       DPTR,#zclSampleSensorEnviroment_Temperature_NumAttributes
   \   000094   E4           CLR       A
   \   000095   93           MOVC      A,@A+DPTR
   \   000096   FA           MOV       R2,A
   \   000097   7909         MOV       R1,#0x9
   \   000099   12....       LCALL     `??zcl_registerAttrList::?relay`; Banked call to: zcl_registerAttrList
    397            zcl_registerAttrList( SAMPLESENSORENVIROMENT_ENDPOINT_HUMMIDITY, zclSampleSensorEnviroment_Humidity_NumAttributes, zclSampleSensorEnviroment_Humidity_Attrs );   
   \   00009C                ; Setup parameters for call to function zcl_registerAttrList
   \   00009C   7C..         MOV       R4,#zclSampleSensorEnviroment_Humidity_Attrs & 0xff
   \   00009E   7D..         MOV       R5,#(zclSampleSensorEnviroment_Humidity_Attrs >> 8) & 0xff
   \   0000A0   90....       MOV       DPTR,#zclSampleSensorEnviroment_Humidity_NumAttributes
   \   0000A3   E4           CLR       A
   \   0000A4   93           MOVC      A,@A+DPTR
   \   0000A5   FA           MOV       R2,A
   \   0000A6   790A         MOV       R1,#0xa
   \   0000A8   12....       LCALL     `??zcl_registerAttrList::?relay`; Banked call to: zcl_registerAttrList
    398            zcl_registerAttrList( SAMPLESENSORENVIROMENT_ENDPOINT_PIR, zclSampleSensorEnviroment_Pir_NumAttributes, zclSampleSensorEnviroment_Pir_Attrs );   
   \   0000AB                ; Setup parameters for call to function zcl_registerAttrList
   \   0000AB   7C..         MOV       R4,#zclSampleSensorEnviroment_Pir_Attrs & 0xff
   \   0000AD   7D..         MOV       R5,#(zclSampleSensorEnviroment_Pir_Attrs >> 8) & 0xff
   \   0000AF   90....       MOV       DPTR,#zclSampleSensorEnviroment_Pir_NumAttributes
   \   0000B2   E4           CLR       A
   \   0000B3   93           MOVC      A,@A+DPTR
   \   0000B4   FA           MOV       R2,A
   \   0000B5   790B         MOV       R1,#0xb
   \   0000B7   12....       LCALL     `??zcl_registerAttrList::?relay`; Banked call to: zcl_registerAttrList
    399          
    400            // Register the Application to receive the unprocessed Foundation command/response messages
    401            zcl_registerForMsg( zclSampleSensorEnviroment_TaskID );
   \   0000BA                ; Setup parameters for call to function zcl_registerForMsg
   \   0000BA   90....       MOV       DPTR,#zclSampleSensorEnviroment_TaskID
   \   0000BD   E0           MOVX      A,@DPTR
   \   0000BE   F9           MOV       R1,A
   \   0000BF   12....       LCALL     `??zcl_registerForMsg::?relay`; Banked call to: zcl_registerForMsg
    402            
    403            // Register low voltage NV memory protection application callback
    404            RegisterVoltageWarningCB( zclSampleSensorEnviroment_BatteryWarningCB );
   \   0000C2                ; Setup parameters for call to function RegisterVoltageWarningCB
   \   0000C2   7A..         MOV       R2,#`??zclSampleSensorEnviroment_BatteryWarningCB::?` & 0xff
   \   0000C4   7B..         MOV       R3,#(`??zclSampleSensorEnviroment_BatteryWarningCB::?` >> 8) & 0xff
   \   0000C6   12....       LCALL     `??RegisterVoltageWarningCB::?relay`; Banked call to: RegisterVoltageWarningCB
    405            
    406            // Register for all key events - This app will handle all key events
    407            RegisterForKeys( zclSampleSensorEnviroment_TaskID );
   \   0000C9                ; Setup parameters for call to function RegisterForKeys
   \   0000C9   90....       MOV       DPTR,#zclSampleSensorEnviroment_TaskID
   \   0000CC   E0           MOVX      A,@DPTR
   \   0000CD   F9           MOV       R1,A
   \   0000CE   12....       LCALL     `??RegisterForKeys::?relay`; Banked call to: RegisterForKeys
    408            
    409            bdb_RegisterCommissioningStatusCB( zclSampleSensorEnviroment_ProcessCommissioningStatus );
   \   0000D1                ; Setup parameters for call to function bdb_RegisterCommissioningStatusCB
   \   0000D1   7A..         MOV       R2,#??zclSampleSensorEnviroment_ProcessCommissionin & 0xff
   \   0000D3   7B..         MOV       R3,#(??zclSampleSensorEnviroment_ProcessCommissionin >> 8) & 0xff
   \   0000D5   12....       LCALL     `??bdb_RegisterCommissioningStatusCB::?relay`; Banked call to: bdb_RegisterCommissioningStatusCB
    410            
    411          #ifdef BDB_REPORTING
    412            //Adds the default configuration values for the temperature attribute of the ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT cluster, for endpoint SAMPLESENSORENVIROMENT_ENDPOINT
    413            //Default maxReportingInterval value is 10 seconds
    414            //Default minReportingInterval value is 3 seconds
    415            //Default reportChange value is 300 (3 degrees)
    416            //bdb_RepAddAttrCfgRecordDefaultToList(SAMPLESENSORENVIROMENT_ENDPOINT, ZCL_CLUSTER_ID_MS_TEMPERATURE_MEASUREMENT, ATTRID_MS_TEMPERATURE_MEASURED_VALUE, 0, 10, reportableChange);
    417          #endif
    418            
    419            //Register for Endpoints
    420            afRegister( &sampleTemperatureSensor_EpList[INDEX_LIGHT] );
   \   0000D8                ; Setup parameters for call to function afRegister
   \   0000D8   7A..         MOV       R2,#sampleTemperatureSensor_EpList & 0xff
   \   0000DA   7B..         MOV       R3,#(sampleTemperatureSensor_EpList >> 8) & 0xff
   \   0000DC   12....       LCALL     `??afRegister::?relay`; Banked call to: afRegister
    421            afRegister( &sampleTemperatureSensor_EpList[INDEX_TEMPERATURE] );
   \   0000DF                ; Setup parameters for call to function afRegister
   \   0000DF   7A..         MOV       R2,#(sampleTemperatureSensor_EpList + 7) & 0xff
   \   0000E1   7B..         MOV       R3,#((sampleTemperatureSensor_EpList + 7) >> 8) & 0xff
   \   0000E3   12....       LCALL     `??afRegister::?relay`; Banked call to: afRegister
    422            afRegister( &sampleTemperatureSensor_EpList[INDEX_HUMMIDITY] );
   \   0000E6                ; Setup parameters for call to function afRegister
   \   0000E6   7A..         MOV       R2,#(sampleTemperatureSensor_EpList + 14) & 0xff
   \   0000E8   7B..         MOV       R3,#((sampleTemperatureSensor_EpList + 14) >> 8) & 0xff
   \   0000EA   12....       LCALL     `??afRegister::?relay`; Banked call to: afRegister
    423            afRegister( &sampleTemperatureSensor_EpList[INDEX_PIR] );
   \   0000ED                ; Setup parameters for call to function afRegister
   \   0000ED   7A..         MOV       R2,#(sampleTemperatureSensor_EpList + 21) & 0xff
   \   0000EF   7B..         MOV       R3,#((sampleTemperatureSensor_EpList + 21) >> 8) & 0xff
   \   0000F1   12....       LCALL     `??afRegister::?relay`; Banked call to: afRegister
    424          
    425            zdpExternalStateTaskID = zclSampleSensorEnviroment_TaskID;
   \   0000F4   90....       MOV       DPTR,#zclSampleSensorEnviroment_TaskID
   \   0000F7   E0           MOVX      A,@DPTR
   \   0000F8   90....       MOV       DPTR,#zdpExternalStateTaskID
   \   0000FB   F0           MOVX      @DPTR,A
   \   0000FC   A3           INC       DPTR
   \   0000FD   E4           CLR       A
   \   0000FE   F0           MOVX      @DPTR,A
    426            
    427            ZDO_RegisterForZDOMsg( zclSampleSensorEnviroment_TaskID, End_Device_Bind_rsp );
   \   0000FF                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   0000FF   7A20         MOV       R2,#0x20
   \   000101   7B80         MOV       R3,#-0x80
   \   000103   90....       MOV       DPTR,#zclSampleSensorEnviroment_TaskID
   \   000106   E0           MOVX      A,@DPTR
   \   000107   F9           MOV       R1,A
   \   000108   12....       LCALL     `??ZDO_RegisterForZDOMsg::?relay`; Banked call to: ZDO_RegisterForZDOMsg
    428            ZDO_RegisterForZDOMsg( zclSampleSensorEnviroment_TaskID, Match_Desc_rsp );
   \   00010B                ; Setup parameters for call to function ZDO_RegisterForZDOMsg
   \   00010B   7A06         MOV       R2,#0x6
   \   00010D   7B80         MOV       R3,#-0x80
   \   00010F   90....       MOV       DPTR,#zclSampleSensorEnviroment_TaskID
   \   000112   E0           MOVX      A,@DPTR
   \   000113   F9           MOV       R1,A
   \   000114   12....       LCALL     `??ZDO_RegisterForZDOMsg::?relay`; Banked call to: ZDO_RegisterForZDOMsg
    429          }
   \   000117                REQUIRE ?Subroutine0
   \   000117                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   7F01         MOV       R7,#0x1
   \   000002   02....       LJMP      ?BANKED_LEAVE_XDATA
    430          
    431          /*********************************************************************
    432           * @fn          zclSample_event_loop
    433           *
    434           * @brief       Event Loop Processor for zclGeneral.
    435           *
    436           * @param       none
    437           *
    438           * @return      none
    439           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    440          uint16 zclSampleSensorEnviroment_event_loop( uint8 task_id, uint16 events )
   \                     zclSampleSensorEnviroment_event_loop:
    441          {
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000   74F4         MOV       A,#-0xc
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 0
   \   000005   8A..         MOV       ?V0,R2
   \   000007   8B..         MOV       ?V1,R3
    442            afIncomingMSGPacket_t *MSGpkt;
    443          
    444            (void)task_id;  // Intentionally unreferenced parameter
    445          
    446            if ( events & SYS_EVENT_MSG )
   \   000009   EB           MOV       A,R3
   \   00000A   5480         ANL       A,#0x80
   \   00000C   701C         JNZ       ??zclSampleSensorEnviroment_event_loop_0
    447            {
    448              while ( (MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( zclSampleSensorEnviroment_TaskID )) )
    449              {
    450                switch ( MSGpkt->hdr.event )
    451                {
    452                  case ZCL_INCOMING_MSG:
    453                    // Incoming ZCL Foundation command/response messages
    454                    zclSampleSensorEnviroment_ProcessIncomingMsg( (zclIncomingMsg_t *)MSGpkt );
    455                    break;
    456          
    457                  case KEY_CHANGE:
    458                    zclSampleSensorEnviroment_HandleKeys( ((keyChange_t *)MSGpkt)->state, ((keyChange_t *)MSGpkt)->keys );
    459                    break;
    460          
    461                  case ZDO_STATE_CHANGE:
    462                    break;
    463          
    464                  default:
    465                    break;
    466                }
    467          
    468                // Release the memory
    469                osal_msg_deallocate( (uint8 *)MSGpkt );
    470              }
    471          
    472              // return unprocessed events
    473              return (events ^ SYS_EVENT_MSG);
    474            }
    475            
    476          #if ZG_BUILD_ENDDEVICE_TYPE    
    477            if ( events & SAMPLEAPP_END_DEVICE_REJOIN_EVT )
    478            {
    479              bdb_ZedAttemptRecoverNwk();
    480              return ( events ^ SAMPLEAPP_END_DEVICE_REJOIN_EVT );
    481            }
    482          #endif
    483          
    484            // Discard unknown events
    485            return 0;
   \   00000E   7A00         MOV       R2,#0x0
   \   000010   7B00         MOV       R3,#0x0
   \                     ??zclSampleSensorEnviroment_event_loop_1:
   \   000012   7F04         MOV       R7,#0x4
   \   000014   02....       LJMP      ?BANKED_LEAVE_XDATA
   \                     ??zclSampleSensorEnviroment_event_loop_2:
   \   000017   8A82         MOV       DPL,R2
   \   000019   8B83         MOV       DPH,R3
   \   00001B   E0           MOVX      A,@DPTR
   \   00001C   6434         XRL       A,#0x34
   \   00001E   7003         JNZ       ??zclSampleSensorEnviroment_event_loop_3
   \   000020                ; Setup parameters for call to function zclSampleSensorEnviroment_ProcessIncomingMsg
   \   000020   12....       LCALL     `??zclSampleSensorEnviroment_ProcessIncomingMsg:`; Banked call to: zclSampleSensorEnviroment_ProcessIncomingMsg
   \                     ??zclSampleSensorEnviroment_event_loop_3:
   \   000023                ; Setup parameters for call to function osal_msg_deallocate
   \   000023   AA..         MOV       R2,?V2
   \   000025   EF           MOV       A,R7
   \   000026   FB           MOV       R3,A
   \   000027   12....       LCALL     `??osal_msg_deallocate::?relay`; Banked call to: osal_msg_deallocate
   \                     ??zclSampleSensorEnviroment_event_loop_0:
   \   00002A                ; Setup parameters for call to function osal_msg_receive
   \   00002A   90....       MOV       DPTR,#zclSampleSensorEnviroment_TaskID
   \   00002D   E0           MOVX      A,@DPTR
   \   00002E   F9           MOV       R1,A
   \   00002F   12....       LCALL     `??osal_msg_receive::?relay`; Banked call to: osal_msg_receive
   \   000032   8A..         MOV       ?V2,R2
   \   000034   8B..         MOV       ?V3,R3
   \   000036   AF..         MOV       R7,?V3
   \   000038   EA           MOV       A,R2
   \   000039   4F           ORL       A,R7
   \   00003A   70DB         JNZ       ??zclSampleSensorEnviroment_event_loop_2
   \   00003C   AA..         MOV       R2,?V0
   \   00003E   E5..         MOV       A,?V1
   \   000040   6480         XRL       A,#0x80
   \   000042   FB           MOV       R3,A
   \   000043   80CD         SJMP      ??zclSampleSensorEnviroment_event_loop_1
    486          }
    487          
    488          
    489          /*********************************************************************
    490           * @fn      zclSampleSensorEnviroment_LcdDisplayMainMode
    491           *
    492           * @brief   Called to display the main screen on the LCD.
    493           *
    494           * @param   none
    495           *
    496           * @return  none
    497           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    498          static void zclSampleSensorEnviroment_ProcessCommissioningStatus(bdbCommissioningModeMsg_t* bdbCommissioningModeMsg)
   \                     zclSampleSensorEnviroment_ProcessCommissioningStatus:
    499          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    500              switch(bdbCommissioningModeMsg->bdbCommissioningMode)
   \   000004   8A82         MOV       DPL,R2
   \   000006   8B83         MOV       DPH,R3
   \   000008   A3           INC       DPTR
   \   000009   E0           MOVX      A,@DPTR
   \   00000A   6402         XRL       A,#0x2
   \   00000C   7010         JNZ       ??zclSampleSensorEnviroment_ProcessCommissionin_1
    501              {
    502                case BDB_COMMISSIONING_FORMATION:
    503                  if(bdbCommissioningModeMsg->bdbCommissioningStatus == BDB_COMMISSIONING_SUCCESS)
   \   00000E   8A82         MOV       DPL,R2
   \   000010   8B83         MOV       DPH,R3
   \   000012   E0           MOVX      A,@DPTR
   \   000013   7009         JNZ       ??zclSampleSensorEnviroment_ProcessCommissionin_1
    504                  {
    505                    //After formation, perform nwk steering again plus the remaining commissioning modes that has not been process yet
    506                    bdb_StartCommissioning(BDB_COMMISSIONING_MODE_NWK_STEERING | bdbCommissioningModeMsg->bdbRemainingCommissioningModes);
   \   000015                ; Setup parameters for call to function bdb_StartCommissioning
   \   000015   A3           INC       DPTR
   \   000016   A3           INC       DPTR
   \   000017   E0           MOVX      A,@DPTR
   \   000018   4402         ORL       A,#0x2
   \   00001A   F9           MOV       R1,A
   \   00001B   12....       LCALL     `??bdb_StartCommissioning::?relay`; Banked call to: bdb_StartCommissioning
    507                  }
    508                  else
    509                  {
    510                    //Want to try other channels?
    511                    //try with bdb_setChannelAttribute
    512                  }
    513                break;
    514                case BDB_COMMISSIONING_NWK_STEERING:
    515                  if(bdbCommissioningModeMsg->bdbCommissioningStatus == BDB_COMMISSIONING_SUCCESS)
    516                  {
    517                    //YOUR JOB:
    518                    //We are on the nwk, what now?
    519                  }
    520                  else
    521                  {
    522                    //See the possible errors for nwk steering procedure
    523                    //No suitable networks found
    524                    //Want to try other channels?
    525                    //try with bdb_setChannelAttribute
    526                  }
    527                break;
    528                case BDB_COMMISSIONING_FINDING_BINDING:
    529                  if(bdbCommissioningModeMsg->bdbCommissioningStatus == BDB_COMMISSIONING_SUCCESS)
    530                  {
    531                    //YOUR JOB:
    532                  }
    533                  else
    534                  {
    535                    //YOUR JOB:
    536                    //retry?, wait for user interaction?
    537                  }
    538                break;
    539                case BDB_COMMISSIONING_INITIALIZATION:
    540                  //Initialization notification can only be successful. Failure on initialization 
    541                  //only happens for ZED and is notified as BDB_COMMISSIONING_PARENT_LOST notification
    542                  
    543                  //YOUR JOB:
    544                  //We are on a network, what now?
    545                  
    546                break;
    547          #if ZG_BUILD_ENDDEVICE_TYPE    
    548              case BDB_COMMISSIONING_PARENT_LOST:
    549                if(bdbCommissioningModeMsg->bdbCommissioningStatus == BDB_COMMISSIONING_NETWORK_RESTORED)
    550                {
    551                  //We did recover from losing parent
    552                }
    553                else
    554                {
    555                  //Parent not found, attempt to rejoin again after a fixed delay
    556                  osal_start_timerEx(zclSampleSensorEnviroment_TaskID, SAMPLEAPP_END_DEVICE_REJOIN_EVT, SAMPLEAPP_END_DEVICE_REJOIN_DELAY);
    557                }
    558              break;
    559          #endif 
    560              }
    561          }
   \                     ??zclSampleSensorEnviroment_ProcessCommissionin_1:
   \   00001E                REQUIRE ?Subroutine1
   \   00001E                ; // Fall through to label ?Subroutine1

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   D083         POP       DPH
   \   000002   D082         POP       DPL
   \   000004   02....       LJMP      ?BRET
    562          
    563          /*********************************************************************
    564           * @fn      zclSampleSensorEnviroment_BasicResetCB
    565           *
    566           * @brief   Callback from the ZCL General Cluster Library
    567           *          to set all the Basic Cluster attributes to default values.
    568           *
    569           * @param   none
    570           *
    571           * @return  none
    572           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    573          static void zclSampleSensorEnviroment_BasicResetCB( void )
   \                     zclSampleSensorEnviroment_BasicResetCB:
    574          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    575            zclSampleSensorEnviroment_ResetAttributesToDefaultValues();
   \   000004                ; Setup parameters for call to function zclSampleSensorEnviroment_ResetAttributesToDefaultValues
   \   000004   12....       LCALL     ??zclSampleSensorEnviroment_ResetAttributesToDe; Banked call to: zclSampleSensorEnviroment_ResetAttributesToDefaultValues
    576          }
   \   000007   80..         SJMP      ?Subroutine1
    577          
    578          /*********************************************************************
    579           * @fn      zclSampleSensorEnviroment_BatteryWarningCB
    580           *
    581           * @brief   Called to handle battery-low situation.
    582           *
    583           * @param   voltLevel - level of severity
    584           *
    585           * @return  none
    586           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    587          void zclSampleSensorEnviroment_BatteryWarningCB( uint8 voltLevel )
   \                     zclSampleSensorEnviroment_BatteryWarningCB:
    588          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    589            if ( voltLevel == VOLT_LEVEL_CAUTIOUS )
    590            {
    591              // Send warning message to the gateway and blink LED
    592            }
    593            else if ( voltLevel == VOLT_LEVEL_BAD )
    594            {
    595              // Shut down the system
    596            }
    597          }
   \   000000   02....       LJMP      ?BRET
    598          
    599          /******************************************************************************
    600           *
    601           *  Functions for processing ZCL Foundation incoming Command/Response messages
    602           *
    603           *****************************************************************************/
    604          
    605          /*********************************************************************
    606           * @fn      zclSampleSensorEnviroment_ProcessIncomingMsg
    607           *
    608           * @brief   Process ZCL Foundation incoming message
    609           *
    610           * @param   pInMsg - pointer to the received message
    611           *
    612           * @return  none
    613           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    614          static void zclSampleSensorEnviroment_ProcessIncomingMsg( zclIncomingMsg_t *pInMsg)
   \                     zclSampleSensorEnviroment_ProcessIncomingMsg:
    615          {
   \   000000   74F7         MOV       A,#-0x9
   \   000002   12....       LCALL     ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
    616            switch ( pInMsg->zclHdr.commandID )
   \   000005   EA           MOV       A,R2
   \   000006   2417         ADD       A,#0x17
   \   000008   F8           MOV       R0,A
   \   000009   E4           CLR       A
   \   00000A   3B           ADDC      A,R3
   \   00000B   F9           MOV       R1,A
   \   00000C   E8           MOV       A,R0
   \   00000D   FE           MOV       R6,A
   \   00000E   E9           MOV       A,R1
   \   00000F   FF           MOV       R7,A
   \   000010   8A82         MOV       DPL,R2
   \   000012   8B83         MOV       DPH,R3
   \   000014   A3           INC       DPTR
   \   000015   A3           INC       DPTR
   \   000016   A3           INC       DPTR
   \   000017   A3           INC       DPTR
   \   000018   A3           INC       DPTR
   \   000019   A3           INC       DPTR
   \   00001A   A3           INC       DPTR
   \   00001B   E0           MOVX      A,@DPTR
   \   00001C   14           DEC       A
   \   00001D   6016         JZ        ??zclSampleSensorEnviroment_ProcessIncomingMsg_0
   \   00001F   24FD         ADD       A,#-0x3
   \   000021   601F         JZ        ??zclSampleSensorEnviroment_ProcessIncomingMsg_1
   \   000023   24F7         ADD       A,#-0x9
   \   000025   602D         JZ        ??zclSampleSensorEnviroment_ProcessIncomingMsg_2
   \   000027   24FB         ADD       A,#-0x5
   \   000029   6024         JZ        ??zclSampleSensorEnviroment_ProcessIncomingMsg_3
   \   00002B   24FE         ADD       A,#-0x2
   \   00002D   6020         JZ        ??zclSampleSensorEnviroment_ProcessIncomingMsg_3
   \   00002F   24FE         ADD       A,#-0x2
   \   000031   6033         JZ        ??zclSampleSensorEnviroment_ProcessIncomingMsg_4
   \   000033   8043         SJMP      ??zclSampleSensorEnviroment_ProcessIncomingMsg_5
    617            {
    618          #ifdef ZCL_READ
    619              case ZCL_CMD_READ_RSP:
    620                zclSampleSensorEnviroment_ProcessInReadRspCmd( pInMsg );
   \                     ??zclSampleSensorEnviroment_ProcessIncomingMsg_0:
   \   000035   12....       LCALL     ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_0:
   \   000038   E0           MOVX      A,@DPTR
   \   000039   F9           MOV       R1,A
   \   00003A   E8           MOV       A,R0
   \   00003B   C3           CLR       C
   \   00003C   99           SUBB      A,R1
   \   00003D   5039         JNC       ??zclSampleSensorEnviroment_ProcessIncomingMsg_5
   \   00003F   08           INC       R0
   \   000040   80F6         SJMP      ??CrossCallReturnLabel_0
    621                break;
    622          #endif
    623          #ifdef ZCL_WRITE
    624              case ZCL_CMD_WRITE_RSP:
    625                zclSampleSensorEnviroment_ProcessInWriteRspCmd( pInMsg );
   \                     ??zclSampleSensorEnviroment_ProcessIncomingMsg_1:
   \   000042   12....       LCALL     ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   000045   E0           MOVX      A,@DPTR
   \   000046   F9           MOV       R1,A
   \   000047   E8           MOV       A,R0
   \   000048   C3           CLR       C
   \   000049   99           SUBB      A,R1
   \   00004A   502C         JNC       ??zclSampleSensorEnviroment_ProcessIncomingMsg_5
   \   00004C   08           INC       R0
   \   00004D   80F6         SJMP      ??CrossCallReturnLabel_1
    626                break;
    627          #endif
    628          #ifdef ZCL_REPORT
    629              // See ZCL Test Applicaiton (zcl_testapp.c) for sample code on Attribute Reporting
    630              case ZCL_CMD_CONFIG_REPORT:
    631                //zclSampleSensorEnviroment_ProcessInConfigReportCmd( pInMsg );
    632                break;
    633                case ZCL_CMD_READ_REPORT_CFG:
    634                //zclSampleSensorEnviroment_ProcessInReadReportCfgCmd( pInMsg );
    635                break;
    636              case ZCL_CMD_CONFIG_REPORT_RSP:
    637                //zclSampleSensorEnviroment_ProcessInConfigReportRspCmd( pInMsg );
    638                break;
    639              case ZCL_CMD_READ_REPORT_CFG_RSP:
    640                //zclSampleSensorEnviroment_ProcessInReadReportCfgRspCmd( pInMsg );
    641                break;
    642          
    643              case ZCL_CMD_REPORT:
    644                //zclSampleSensorEnviroment_ProcessInReportCmd( pInMsg );
    645                break;
    646          #endif
    647              case ZCL_CMD_DEFAULT_RSP:
    648                zclSampleSensorEnviroment_ProcessInDefaultRspCmd( pInMsg );
    649                break;
    650          #ifdef ZCL_DISCOVER
    651              case ZCL_CMD_DISCOVER_CMDS_RECEIVED_RSP:
    652                zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd( pInMsg );
   \                     ??zclSampleSensorEnviroment_ProcessIncomingMsg_3:
   \   00004F                ; Setup parameters for call to function zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd
    653                break;
    654          
    655              case ZCL_CMD_DISCOVER_CMDS_GEN_RSP:
    656                zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd( pInMsg );
   \   00004F                ; Setup parameters for call to function zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd
   \   00004F   12....       LCALL     ??zclSampleSensorEnviroment_ProcessInDiscCmdsRs; Banked call to: zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd
    657                break;
   \   000052   8024         SJMP      ??zclSampleSensorEnviroment_ProcessIncomingMsg_5
    658          
    659              case ZCL_CMD_DISCOVER_ATTRS_RSP:
    660                zclSampleSensorEnviroment_ProcessInDiscAttrsRspCmd( pInMsg );
   \                     ??zclSampleSensorEnviroment_ProcessIncomingMsg_2:
   \   000054   12....       LCALL     ?Subroutine2 & 0xFFFF
   \                     ??CrossCallReturnLabel_3:
   \   000057   8882         MOV       DPL,R0
   \   000059   8983         MOV       DPH,R1
   \   00005B   A3           INC       DPTR
   \   00005C   E0           MOVX      A,@DPTR
   \   00005D   FB           MOV       R3,A
   \   00005E   EA           MOV       A,R2
   \   00005F   C3           CLR       C
   \   000060   9B           SUBB      A,R3
   \   000061   5015         JNC       ??zclSampleSensorEnviroment_ProcessIncomingMsg_5
   \   000063   0A           INC       R2
   \   000064   80F1         SJMP      ??CrossCallReturnLabel_3
    661                break;
    662          
    663              case ZCL_CMD_DISCOVER_ATTRS_EXT_RSP:
    664                zclSampleSensorEnviroment_ProcessInDiscAttrsExtRspCmd( pInMsg );
   \                     ??zclSampleSensorEnviroment_ProcessIncomingMsg_4:
   \   000066   12....       LCALL     ?Subroutine2 & 0xFFFF
    665                break;
    666          #endif
    667              default:
    668                break;
    669            }
   \                     ??CrossCallReturnLabel_4:
   \   000069   8001         SJMP      ??zclSampleSensorEnviroment_ProcessIncomingMsg_6
   \                     ??zclSampleSensorEnviroment_ProcessIncomingMsg_7:
   \   00006B   0A           INC       R2
   \                     ??zclSampleSensorEnviroment_ProcessIncomingMsg_6:
   \   00006C   8882         MOV       DPL,R0
   \   00006E   8983         MOV       DPH,R1
   \   000070   A3           INC       DPTR
   \   000071   E0           MOVX      A,@DPTR
   \   000072   FB           MOV       R3,A
   \   000073   EA           MOV       A,R2
   \   000074   C3           CLR       C
   \   000075   9B           SUBB      A,R3
   \   000076   40F3         JC        ??zclSampleSensorEnviroment_ProcessIncomingMsg_7
    670          
    671            if ( pInMsg->attrCmd )
   \                     ??zclSampleSensorEnviroment_ProcessIncomingMsg_5:
   \   000078   8E82         MOV       DPL,R6
   \   00007A   8F83         MOV       DPH,R7
   \   00007C   E0           MOVX      A,@DPTR
   \   00007D   FA           MOV       R2,A
   \   00007E   A3           INC       DPTR
   \   00007F   E0           MOVX      A,@DPTR
   \   000080   FB           MOV       R3,A
   \   000081   EA           MOV       A,R2
   \   000082   4B           ORL       A,R3
   \   000083   6003         JZ        ??zclSampleSensorEnviroment_ProcessIncomingMsg_8
    672            {
    673              osal_mem_free( pInMsg->attrCmd );
   \   000085                ; Setup parameters for call to function osal_mem_free
   \   000085   12....       LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
    674            }
    675          }
   \                     ??zclSampleSensorEnviroment_ProcessIncomingMsg_8:
   \   000088   02....       LJMP      ?Subroutine0 & 0xFFFF

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   8882         MOV       DPL,R0
   \   000002   8983         MOV       DPH,R1
   \   000004   E0           MOVX      A,@DPTR
   \   000005   F8           MOV       R0,A
   \   000006   A3           INC       DPTR
   \   000007   E0           MOVX      A,@DPTR
   \   000008   8882         MOV       DPL,R0
   \   00000A   F583         MOV       DPH,A
   \   00000C   7800         MOV       R0,#0x0
   \   00000E   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   8882         MOV       DPL,R0
   \   000002   8983         MOV       DPH,R1
   \   000004                REQUIRE ??Subroutine4_0
   \   000004                ; // Fall through to label ??Subroutine4_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine4_0:
   \   000000   E0           MOVX      A,@DPTR
   \   000001   F8           MOV       R0,A
   \   000002   A3           INC       DPTR
   \   000003   E0           MOVX      A,@DPTR
   \   000004   F9           MOV       R1,A
   \   000005   7A00         MOV       R2,#0x0
   \   000007   22           RET
    676          
    677          #ifdef ZCL_READ
    678          /*********************************************************************
    679           * @fn      zclSampleSensorEnviroment_ProcessInReadRspCmd
    680           *
    681           * @brief   Process the "Profile" Read Response Command
    682           *
    683           * @param   pInMsg - incoming message to process
    684           *
    685           * @return  none
    686           */
    687          static uint8 zclSampleSensorEnviroment_ProcessInReadRspCmd( zclIncomingMsg_t *pInMsg )
    688          {
    689            zclReadRspCmd_t *readRspCmd;
    690            uint8 i;
    691          
    692            readRspCmd = (zclReadRspCmd_t *)pInMsg->attrCmd;
    693            for ( i = 0; i < readRspCmd->numAttr; i++ )
    694            {
    695              // Notify the originator of the results of the original read attributes
    696              // attempt and, for each successfull request, the value of the requested
    697              // attribute
    698            }
    699          
    700            return ( TRUE );
    701          }
    702          #endif // ZCL_READ
    703          
    704          #ifdef ZCL_WRITE
    705          /*********************************************************************
    706           * @fn      zclSampleSensorEnviroment_ProcessInWriteRspCmd
    707           *
    708           * @brief   Process the "Profile" Write Response Command
    709           *
    710           * @param   pInMsg - incoming message to process
    711           *
    712           * @return  none
    713           */
    714          static uint8 zclSampleSensorEnviroment_ProcessInWriteRspCmd( zclIncomingMsg_t *pInMsg )
    715          {
    716            zclWriteRspCmd_t *writeRspCmd;
    717            uint8 i;
    718          
    719            writeRspCmd = (zclWriteRspCmd_t *)pInMsg->attrCmd;
    720            for ( i = 0; i < writeRspCmd->numAttr; i++ )
    721            {
    722              // Notify the device of the results of the its original write attributes
    723              // command.
    724            }
    725          
    726            return ( TRUE );
    727          }
    728          #endif // ZCL_WRITE
    729          
    730          /*********************************************************************
    731           * @fn      zclSampleSensorEnviroment_ProcessInDefaultRspCmd
    732           *
    733           * @brief   Process the "Profile" Default Response Command
    734           *
    735           * @param   pInMsg - incoming message to process
    736           *
    737           * @return  none
    738           */
    739          static uint8 zclSampleSensorEnviroment_ProcessInDefaultRspCmd( zclIncomingMsg_t *pInMsg )
    740          {
    741            // zclDefaultRspCmd_t *defaultRspCmd = (zclDefaultRspCmd_t *)pInMsg->attrCmd;
    742          
    743            // Device is notified of the Default Response command.
    744            (void)pInMsg;
    745          
    746            return ( TRUE );
    747          }
    748          
    749          #ifdef ZCL_DISCOVER
    750          /*********************************************************************
    751           * @fn      zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd
    752           *
    753           * @brief   Process the Discover Commands Response Command
    754           *
    755           * @param   pInMsg - incoming message to process
    756           *
    757           * @return  none
    758           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    759          static uint8 zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd( zclIncomingMsg_t *pInMsg )
   \                     zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd:
    760          {
   \   000000   C082         PUSH      DPL
   \   000002   C083         PUSH      DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    761            zclDiscoverCmdsCmdRsp_t *discoverRspCmd;
    762            uint8 i;
    763          
    764            discoverRspCmd = (zclDiscoverCmdsCmdRsp_t *)pInMsg->attrCmd;
   \   000004   EA           MOV       A,R2
   \   000005   2417         ADD       A,#0x17
   \   000007   F582         MOV       DPL,A
   \   000009   E4           CLR       A
   \   00000A   3B           ADDC      A,R3
   \   00000B   F583         MOV       DPH,A
   \   00000D   12....       LCALL     ??Subroutine4_0 & 0xFFFF
    765            for ( i = 0; i < discoverRspCmd->numCmd; i++ )
   \                     ??CrossCallReturnLabel_2:
   \   000010   8001         SJMP      ??zclSampleSensorEnviroment_ProcessInDiscCmdsRs_1
   \                     ??zclSampleSensorEnviroment_ProcessInDiscCmdsRs_2:
   \   000012   0A           INC       R2
   \                     ??zclSampleSensorEnviroment_ProcessInDiscCmdsRs_1:
   \   000013   8882         MOV       DPL,R0
   \   000015   8983         MOV       DPH,R1
   \   000017   A3           INC       DPTR
   \   000018   A3           INC       DPTR
   \   000019   E0           MOVX      A,@DPTR
   \   00001A   FB           MOV       R3,A
   \   00001B   EA           MOV       A,R2
   \   00001C   C3           CLR       C
   \   00001D   9B           SUBB      A,R3
   \   00001E   40F2         JC        ??zclSampleSensorEnviroment_ProcessInDiscCmdsRs_2
    766            {
    767              // Device is notified of the result of its attribute discovery command.
    768            }
    769          
    770            return ( TRUE );
   \   000020   7901         MOV       R1,#0x1
   \   000022   02....       LJMP      ?Subroutine1 & 0xFFFF
    771          }

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclSampleSensorEnviroment_Nw`:
   \   000000   01           DB 1

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for sampleTemperatureSensor_EpLi`:
   \   000000   08           DB 8
   \   000001   00           DB 0
   \   000002   ....         DW zclSampleSensorEnviroment_TaskID
   \   000004   0000         DW 0H
   \   000006   00           DB 0
   \   000007   09           DB 9
   \   000008   00           DB 0
   \   000009   ....         DW zclSampleSensorEnviroment_TaskID
   \   00000B   0000         DW 0H
   \   00000D   00           DB 0
   \   00000E   0A           DB 10
   \   00000F   00           DB 0
   \   000010   ....         DW zclSampleSensorEnviroment_TaskID
   \   000012   0000         DW 0H
   \   000014   00           DB 0
   \   000015   0B           DB 11
   \   000016   00           DB 0
   \   000017   ....         DW zclSampleSensorEnviroment_TaskID
   \   000019   0000         DW 0H
   \   00001B   00           DB 0

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for reportableChange>`:
   \   000000   2C           DB 44
   \   000001   01           DB 1
   \   000002   00           DB 0
   \   000003   00           DB 0

   \                                 In  segment XDATA_ID, align 1, keep-with-next
   \                     `?<Initializer for zclSampleSensorEnviroment_Cm`:
   \   000000   ....         DW `??zclSampleSensorEnviroment_BasicResetCB::?rela`
   \   000002   0000         DW 0H
   \   000004   0000         DW 0H
   \   000006   0000         DW 0H
   \   000008   0000         DW 0H
   \   00000A   0000         DW 0H
   \   00000C   0000         DW 0H
   \   00000E   0000         DW 0H
   \   000010   0000         DW 0H
   \   000012   ....         DW `??zclSampleSensorEnviroment_BasicResetCB::?rela`
   \   000014   0000         DW 0H
   \   000016   0000         DW 0H
   \   000018   0000         DW 0H
   \   00001A   0000         DW 0H
   \   00001C   0000         DW 0H
   \   00001E   0000         DW 0H
   \   000020   0000         DW 0H
   \   000022   0000         DW 0H
   \   000024   ....         DW `??zclSampleSensorEnviroment_BasicResetCB::?rela`
   \   000026   0000         DW 0H
   \   000028   0000         DW 0H
   \   00002A   0000         DW 0H
   \   00002C   0000         DW 0H
   \   00002E   0000         DW 0H
   \   000030   0000         DW 0H
   \   000032   0000         DW 0H
   \   000034   0000         DW 0H
   \   000036   ....         DW `??zclSampleSensorEnviroment_BasicResetCB::?rela`
   \   000038   0000         DW 0H
   \   00003A   0000         DW 0H
   \   00003C   0000         DW 0H
   \   00003E   0000         DW 0H
   \   000040   0000         DW 0H
   \   000042   0000         DW 0H
   \   000044   0000         DW 0H
   \   000046   0000         DW 0H

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??zclSampleSensorEnviroment_Init::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclSampleSensorEnviroment_Init

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??zclSampleSensorEnviroment_event_loop::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclSampleSensorEnviroment_event_loop

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclSampleSensorEnviroment_ProcessCommissionin:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclSampleSensorEnviroment_ProcessCommissioningStatus

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??zclSampleSensorEnviroment_BasicResetCB::?rela`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclSampleSensorEnviroment_BasicResetCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??zclSampleSensorEnviroment_BatteryWarningCB::?`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclSampleSensorEnviroment_BatteryWarningCB

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??zclSampleSensorEnviroment_ProcessIncomingMsg:`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclSampleSensorEnviroment_ProcessIncomingMsg

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zclSampleSensorEnviroment_ProcessInDiscCmdsRs:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd
    772          
    773          /*********************************************************************
    774           * @fn      zclSampleSensorEnviroment_ProcessInDiscAttrsRspCmd
    775           *
    776           * @brief   Process the "Profile" Discover Attributes Response Command
    777           *
    778           * @param   pInMsg - incoming message to process
    779           *
    780           * @return  none
    781           */
    782          static uint8 zclSampleSensorEnviroment_ProcessInDiscAttrsRspCmd( zclIncomingMsg_t *pInMsg )
    783          {
    784            zclDiscoverAttrsRspCmd_t *discoverRspCmd;
    785            uint8 i;
    786          
    787            discoverRspCmd = (zclDiscoverAttrsRspCmd_t *)pInMsg->attrCmd;
    788            for ( i = 0; i < discoverRspCmd->numAttr; i++ )
    789            {
    790              // Device is notified of the result of its attribute discovery command.
    791            }
    792          
    793            return ( TRUE );
    794          }
    795          
    796          /*********************************************************************
    797           * @fn      zclSampleTemperatureSensor_ProcessInDiscAttrsExtRspCmd
    798           *
    799           * @brief   Process the "Profile" Discover Attributes Extended Response Command
    800           *
    801           * @param   pInMsg - incoming message to process
    802           *
    803           * @return  none
    804           */
    805          static uint8 zclSampleSensorEnviroment_ProcessInDiscAttrsExtRspCmd( zclIncomingMsg_t *pInMsg )
    806          {
    807            zclDiscoverAttrsExtRsp_t *discoverRspCmd;
    808            uint8 i;
    809          
    810            discoverRspCmd = (zclDiscoverAttrsExtRsp_t *)pInMsg->attrCmd;
    811            for ( i = 0; i < discoverRspCmd->numAttr; i++ )
    812            {
    813              // Device is notified of the result of its attribute discovery command.
    814            }
    815          
    816            return ( TRUE );
    817          }
    818          #endif // ZCL_DISCOVER
    819          
    820          /*********************************************************************
    821           * @fn      zclSampleTemperatureSensor_HandleKeys
    822           *
    823           * @brief   Handles all key events for this device.
    824           *
    825           * @param   shift - true if in shift/alt.
    826           * @param   keys - bit field for key events. Valid entries:
    827           *                 HAL_KEY_SW_5
    828           *                 HAL_KEY_SW_4
    829           *                 HAL_KEY_SW_3
    830           *                 HAL_KEY_SW_2
    831           *                 HAL_KEY_SW_1
    832           *
    833           * @return  none
    834           */
    835          static void zclSampleSensorEnviroment_HandleKeys( byte shift, byte keys )
    836          {
    837          }
    838          /****************************************************************************
    839          ****************************************************************************/
    840          
    841          

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      2      0   zclSampleSensorEnviroment_BasicResetCB
        2      0   -> zclSampleSensorEnviroment_ResetAttributesToDefaultValues
      0      0   zclSampleSensorEnviroment_BatteryWarningCB
      0      9   zclSampleSensorEnviroment_Init
        0      9   -> RegisterForKeys
        0      9   -> RegisterVoltageWarningCB
        0      9   -> ZDO_RegisterForZDOMsg
        0      9   -> afRegister
        0      9   -> bdb_RegisterCommissioningStatusCB
        0      9   -> bdb_RegisterSimpleDescriptor
        0      9   -> zclGeneral_RegisterCmdCallbacks
        0      9   -> zclSampleSensorEnviroment_ResetAttributesToDefaultValues
        0      9   -> zcl_registerAttrList
        0      9   -> zcl_registerForMsg
      2      0   zclSampleSensorEnviroment_ProcessCommissioningStatus
        2      0   -> bdb_StartCommissioning
      2      9   zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd
      0     21   zclSampleSensorEnviroment_ProcessIncomingMsg
        0      9   -> osal_mem_free
        0      9   -> zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd
      0     12   zclSampleSensorEnviroment_event_loop
        0     12   -> osal_msg_deallocate
        0     12   -> osal_msg_receive
        0     12   -> zclSampleSensorEnviroment_ProcessIncomingMsg


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Initializer for reportableChange>
      28  ?<Initializer for sampleTemperatureSensor_EpLi
      72  ?<Initializer for zclSampleSensorEnviroment_Cm
       1  ?<Initializer for zclSampleSensorEnviroment_Nw
       8  ??Subroutine4_0
       5  ?Subroutine0
       7  ?Subroutine1
       4  ?Subroutine2
      15  ?Subroutine3
       4  reportableChange
      28  sampleTemperatureSensor_EpList
       9  zclSampleSensorEnviroment_BasicResetCB
       6  zclSampleSensorEnviroment_BasicResetCB::?relay
       3  zclSampleSensorEnviroment_BatteryWarningCB
       6  zclSampleSensorEnviroment_BatteryWarningCB::?relay
      72  zclSampleSensorEnviroment_CmdCallbacksList
     279  zclSampleSensorEnviroment_Init
       6  zclSampleSensorEnviroment_Init::?relay
       1  zclSampleSensorEnviroment_NwkState
      30  zclSampleSensorEnviroment_ProcessCommissioningStatus
       6  zclSampleSensorEnviroment_ProcessCommissioningStatus::?relay
      37  zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd
       6  zclSampleSensorEnviroment_ProcessInDiscCmdsRspCmd::?relay
     139  zclSampleSensorEnviroment_ProcessIncomingMsg
       6  zclSampleSensorEnviroment_ProcessIncomingMsg::?relay
       1  zclSampleSensorEnviroment_TaskID
      12  zclSampleSensorEnviroment_dstAddr_hummidity
      12  zclSampleSensorEnviroment_dstAddr_light
      12  zclSampleSensorEnviroment_dstAddr_pir
      12  zclSampleSensorEnviroment_dstAddr_temperature
      69  zclSampleSensorEnviroment_event_loop
       6  zclSampleSensorEnviroment_event_loop::?relay

 
 605 bytes in segment BANKED_CODE
  42 bytes in segment BANK_RELAYS
 105 bytes in segment XDATA_I
 105 bytes in segment XDATA_ID
  49 bytes in segment XDATA_Z
 
 147 bytes of CODE     memory
 605 bytes of HUGECODE memory
 154 bytes of XDATA    memory

Errors: none
Warnings: none
